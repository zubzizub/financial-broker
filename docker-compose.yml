version: "3.7"
services:
  gateway:
    build:
      context: gateway/docker
      dockerfile: development/nginx/Dockerfile
    ports:
      - "80:80"
    depends_on:
      - frontend
      - api
      - docs

  frontend:
    build:
      context: frontend/docker
      dockerfile: development/nginx/Dockerfile
    volumes:
      - ./frontend:/app
    depends_on:
      - api-php-fpm

  frontend-nodejs:
    image: node:10.11-jessie
    volumes:
      - ./frontend:/var/www/frontend
      - ./docs:/var/www/docs
    working_dir: /var/www/frontend
    tty: true

  api:
    build:
      context: api/docker
      dockerfile: development/nginx/Dockerfile
    volumes:
      - ./api:/app
    depends_on:
      - api-php-fpm

  api-php-fpm:
    build:
      context: api/docker
      dockerfile: development/php-fpm/Dockerfile
    environment:
      APP_DEBUG: 1
      APP_ENV: dev
      PHP_IDE_CONFIG: serverName=API
      DB_HOST: api-postgres
      DB_USER: app
      DB_PASSWORD: secret
      DB_NAME: app
    volumes:
      - ./api:/app

  api-php-cli:
    build:
      context: api/docker
      dockerfile: development/php-cli/Dockerfile
    environment:
      APP_DEBUG: 1
      APP_ENV: dev
      PHP_IDE_CONFIG: serverName=API
      DB_HOST: api-postgres
      DB_USER: app
      DB_PASSWORD: secret
      DB_NAME: app
    volumes:
      - ./api:/app

  api-postgres:
    image: postgres:12.2-alpine
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: app
    volumes:
      - api-postgres:/var/lib/postgresql/data
    ports:
      - "54321:5432"

  docs:
    image: swaggerapi/swagger-ui
    volumes:
      - ./docs:/app
    ports:
      - "99:8080"

volumes:
  api-postgres:
